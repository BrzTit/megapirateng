#summary Конфигурирование кода перед загрузкой в Arduino MEGA

= Поддерживаемые платы и сенсоры =
в libraries/AP_ADC/AP_ADC_ADS7844.cpp
  * AllInOne: #define ALLINONE
  * FFIMU: #define FFIMU
  * ITG3205+BMA020 (минимальный набор сенсоров): #define ALLINONE and #define BMA_020, затем требуется закоментировать библиотеку барометра (закоментировать всё о I2C (Wire.something))

= Поддержваемые сонары  =
в libraries/AP_ADC/AP_ADC_ADS7844.cpp
  * DYP-ME007: DYPME007
  * DYP-ME007v2: DYPME007v2

= Поддерживаемые рамы =
== конфигурация рамы ==
в APM_Config.h #define FRAME_CONFIG
  * QUAD_FRAME
  * TRI_FRAME
  * HEXA_FRAME
  * Y6_FRAME
  * OCTA_FRAME
== ориентация рамы ==
в APM_Config.h #define FRAME_ORIENTATION
  * для QUAD_FRAME: PLUS_FRAME, X_FRAME or V_FRAME (нечто среднее между X и Y - хорошо подходит для FPV)
  * для HEXA_FRAME: 
  * для OCTA_FRAME:

= Поддерживаемые GPS протоколы =
в файле APM_Config.h #define GPS_PROTOCOL
  * GPS_PROTOCOL_NONE - без GPS
  * GPS_PROTOCOL_NMEA
  * GPS_PROTOCOL_SIRF
  * GPS_PROTOCOL_UBLOX
  * GPS_PROTOCOL_IMU
  * GPS_PROTOCOL_MTK
  * GPS_PROTOCOL_HIL
  * GPS_PROTOCOL_MTK16
  * GPS_PROTOCOL_AUTO - авто выбор (не рекомендуется)
чтобы изменить скорость порта: #define SERIAL2_BAUD 38400

= Использование APC220 =
если вы хотите использовать APC220 Wireless Communication Module для коммуникации с ПО, измените SERIAL0_BAUD со стандартных 115200 на 57600 и выставите аналогичную скорость в APM Planner