#summary DYP-ME007 Ultrasonic range finder.

= Introduction =

DYP-ME007(v1 or v2) Это ультразвуковой датчик расстояний

= Технические характеристики =
 * Напряжение питания: *5В*;
 * Потребляемый ток: Менее *2мА*;
 * Выходной сигнал: 5В TTL логика;
 * Рабочий угол сенсора: *Не более 15 градусов*;
 * Определяемое растояние: *2см-500см* _(В действительности, у нас не работает больше 2.5м)_
 * Точность: *до 0.3см*
= Как работает датчик =
http://megapirateng.googlecode.com/svn/images/me007_diagram.gif
 # На вывод Trig посылаем импульс длительностью 12мкс, тем самым мы запускаем новое измерение
 # Датчик автоматически посылает пачку из 8 импульсов частотой 40КГц и автоматически определяет, когда сигнал вернется обратно
 # Когда сигнал вернется, на выводе Echo повится высокий уровень. Время в течении которого сигнал будет высоким, соотвтествует расстоянию до объекта.
*В результате, расстояние = (Techo `*` (Скорость звука (340м/с))) / 2;*
_(Делим на 2, т.к. сигнал идет в одну сторону, а потом возвращается)
= Как используется датчик в MegaPirateNG =
Все измерения, производятся в файле libraries/AP_ADC/AP_ADC_ADS7844.cpp. Для формирования импульса запуска и измерения эхо, используется Timer5.
{{{
ISR(TIMER5_COMPA_vect) // This event occurs when counter = 65510
{
		if (sonar_meas == 0) // sonar_meas=1 if we not found Echo pulse, so skip this measurement
				sonar_data = 0;
		PORTH|=B01000000; // set Sonar TX pin to 1 and after ~12us set it to 0 (below) to start new measurement
} 
}}}
Данный обрабочик прерывания срабатывает когда счетчик доходит до значения 65510. Когда это происходит, либо мы измерили расстояние (sonar_meas=1) либо нет (например дистанция больше 2.5м). В любом случае, мы выставляем 1 на выводе Trig сонара и продолжаем отсчет. До переполнения счетчика, остается примерно 12мкс, что нам и надо.
{{{
ISR(TIMER5_OVF_vect)
{
  PORTH&=B10111111;sonar_meas=0; // Counter overflowed, 12us elapsed, set TX pin to 0, and wait for 1 on Echo pin (below)
} 
}}}
Этот обрабочик срабатывает, когда счетчик переполняется. Для нас, это означет, что 12мкс прошли и вывод Trig надо сбросить в 0.
{{{
ISR(PCINT0_vect)
{
	if (PINB & B00010000) { 
		sonar_data_start = TCNT5; // We got 1 on Echo pin, remeber current counter value
	} else {
		sonar_data=TCNT5-sonar_data_start; // We got 0 on Echo pin, calculate impulse length in counter ticks
		sonar_meas=1;
	}
}
}}}
Прерывание PCINT0_vect срабатывает, когда у нас изменяется состояние вывода Echo сонара. Здесь мы проверяем, если на вывод 1, то мы запоминаем текущее время, а когда вывод перейдет в 0, вычисляем дительность импульса. И помечаем, что измерение прошло корректно.
Вычисление дистанции в сантиметрах, выполняется в момент, когда эти данные запрашиваются навигационным кодом.
{{{
if (sonar_data > 23600){ // 2metres * 118 = 23600
	return(200);	// max_value of distance in cm (2m)
} else {
	return(sonar_data / 118); // Magic conversion sonar_data to cm
}
}}}
Здесть стоит отметить, что мы исскуственно ограничили максимальное расстояние датчика 2мя метрами, т.к. большие расстояния измеряются не стабильно.
*Цифра 118, получена методом научного тыка* :) (А вообще, исходя из скорости звука 340м/с. Переводим единицы измерения, учитываем что у нас sonar_data - это тики таймера, а каждый тик = 0.5мкс) 
= Board photo =
http://megapirateng.googlecode.com/svn/images/me007v1.jpg